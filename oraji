#!/bin/bash
BASEDIR="$(dirname "$BASH_SOURCE")"
cd "$BASEDIR"

jdkver="$1"

mytty=$(tty)

export jdkver mytty

#Using sudo without -k flag inside script is a security risk unless you have already checked for root privilege properly.
#The first sudo inside a script should be used with -k flag.
sudo -kEs <<\EOF

[[ $jdkver == "" ]] && read -e -p "Enter the jdk version: " jdkver <$mytty

jdkgenre="jdk"
tmpdir=__ORAJI__$RANDOM

sudo -u $SUDO_USER mkdir /tmp/$tmpdir
sudo -u $SUDO_USER tar -xvf jdk*$jdkver*.tar* -C /tmp/$tmpdir || exit 1

cd /tmp/$tmpdir/$jdkgenre* || exit 2
jdkname=${PWD##*/}

[[ $jdkname != "" && $tmpdir != "" && $jdkgenre != "" && $jdkver != "" ]] || 
{ echo "-----Variable can not be empty-----"; exit 3; }

mkdir -p /usr/lib/jvm/$jdkname
mv -f ./* /usr/lib/jvm/$jdkname

update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/$jdkname/bin/java" 1111
update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/$jdkname/bin/javac" 1111
update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/$jdkname/bin/javaws" 1111
update-alternatives --set java /usr/lib/jvm/$jdkname/bin/java
update-alternatives --set javac /usr/lib/jvm/$jdkname/bin/javac
update-alternatives --set javaws /usr/lib/jvm/$jdkname/bin/javaws

chmod a+x /usr/bin/java
chmod a+x /usr/bin/javac
chmod a+x /usr/bin/javaws
chown -R root:root /usr/lib/jvm/$jdkname

#The following two lines is optional (needed for mozilla firefox)
sudo -u $SUDO_USER mkdir -p ~/.mozilla/plugins
ln -sf /usr/lib/jvm/$jdkname/jre/lib/amd64/libnpjp2.so ~/.mozilla/plugins/
#The above two lines is optional (needed for mozilla firefox)

[[ $tmpdir != "" ]] && sudo -u $SUDO_USER rm -rf /tmp/$tmpdir

#sudo /etc/init.d/apparmor restart
EOF

printf "%s\n" "
*********************Installaion Finished*********************
***************Showing Java version information***************
"
java -version
printf "%s\n" "
*******************See if everything is OK********************
"

